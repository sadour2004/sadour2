{"ast":null,"code":"var _jsxFileName = \"/Users/ayoubsadour/Desktop/last-version-main/frontend/src/components/StoppedMachinesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MachineCard from './MachineCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StoppedMachinesList() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const fetchStoppedMachines = () => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    axios.get(`${serverIP}:5000/api/machines/all`).then(res => {\n      setMachines(res.data.filter(machine => machine.status === 'stop'));\n    });\n  };\n  useEffect(() => {\n    fetchStoppedMachines();\n    const interval = setInterval(fetchStoppedMachines, 10000); // refresh every 10s\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'red',\n        marginBottom: 16\n      },\n      children: \"Stopped Machines (All Processes)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 16,\n        padding: 20\n      },\n      children: [machines.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No stopped machines.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 35\n      }, this), machines.map(machine => /*#__PURE__*/_jsxDEV(MachineCard, {\n        machine: machine\n      }, machine.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(StoppedMachinesList, \"etL6ZTbqU58vGaTbtLSSX9BCKmI=\");\n_c = StoppedMachinesList;\nvar _c;\n$RefreshReg$(_c, \"StoppedMachinesList\");","map":{"version":3,"names":["React","useEffect","useState","axios","MachineCard","jsxDEV","_jsxDEV","StoppedMachinesList","_s","machines","setMachines","fetchStoppedMachines","serverIP","window","location","protocol","hostname","get","then","res","data","filter","machine","status","interval","setInterval","clearInterval","style","marginTop","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","gap","padding","length","map","id","_c","$RefreshReg$"],"sources":["/Users/ayoubsadour/Desktop/last-version-main/frontend/src/components/StoppedMachinesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MachineCard from './MachineCard';\n\nexport default function StoppedMachinesList() {\n  const [machines, setMachines] = useState([]);\n\n  const fetchStoppedMachines = () => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    axios.get(`${serverIP}:5000/api/machines/all`)\n      .then(res => {\n        setMachines(res.data.filter(machine => machine.status === 'stop'));\n      });\n  };\n\n  useEffect(() => {\n    fetchStoppedMachines();\n    const interval = setInterval(fetchStoppedMachines, 10000); // refresh every 10s\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ marginTop: 40 }}>\n      <h3 style={{ color: 'red', marginBottom: 16 }}>Stopped Machines (All Processes)</h3>\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, padding: 20 }}>\n        {machines.length === 0 && <div>No stopped machines.</div>}\n        {machines.map(machine => (\n          <MachineCard key={machine.id} machine={machine} />\n        ))}\n      </div>\n    </div>\n  );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,QAAQ;IAC3Eb,KAAK,CAACc,GAAG,CAAC,GAAGL,QAAQ,wBAAwB,CAAC,CAC3CM,IAAI,CAACC,GAAG,IAAI;MACXT,WAAW,CAACS,GAAG,CAACC,IAAI,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,MAAM,CAAC,CAAC;IACpE,CAAC,CAAC;EACN,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdU,oBAAoB,CAAC,CAAC;IACtB,MAAMa,QAAQ,GAAGC,WAAW,CAACd,oBAAoB,EAAE,KAAK,CAAC,CAAC,CAAC;IAC3D,OAAO,MAAMe,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKqB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC5BvB,OAAA;MAAIqB,KAAK,EAAE;QAAEG,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAF,QAAA,EAAC;IAAgC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpF7B,OAAA;MAAKqB,KAAK,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEC,GAAG,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAAAV,QAAA,GACrEpB,QAAQ,CAAC+B,MAAM,KAAK,CAAC,iBAAIlC,OAAA;QAAAuB,QAAA,EAAK;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACxD1B,QAAQ,CAACgC,GAAG,CAACnB,OAAO,iBACnBhB,OAAA,CAACF,WAAW;QAAkBkB,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACoB,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CA5BuBD,mBAAmB;AAAAoC,EAAA,GAAnBpC,mBAAmB;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}