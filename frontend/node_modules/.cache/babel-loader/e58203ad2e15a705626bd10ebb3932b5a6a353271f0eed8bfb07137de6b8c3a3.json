{"ast":null,"code":"var _jsxFileName = \"/Users/ayoubsadour/Desktop/last-version-main/frontend/src/components/MachinesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MachineCard from './MachineCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MachinesList({\n  processId\n}) {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const calculateStoppedTime = history => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    history.forEach((entry, index) => {\n      if (entry.status === 'stop') {\n        stopStartTime = new Date(entry.changed_at);\n      } else if (entry.status === 'working' && stopStartTime) {\n        const workingStartTime = new Date(entry.changed_at);\n        totalStoppedTime += (workingStartTime - stopStartTime) / 1000; // Convert to seconds\n        stopStartTime = null;\n      }\n    });\n    return totalStoppedTime;\n  };\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    if (processId === 'stopped') {\n      // Fetch all processes, then all machines for each process, and filter stopped\n      axios.get(`${serverIP}:5000/api/processes`).then(res => {\n        const processIds = res.data.map(p => p.id);\n        Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`))).then(results => {\n          const allMachines = results.flatMap(r => r.data);\n          setMachines(allMachines.filter(m => m.status === 'stop'));\n        });\n      });\n    } else {\n      axios.get(`${serverIP}:5000/api/machines?processId=${processId}`).then(res => setMachines(res.data));\n    }\n  }, [processId]);\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    machines.forEach(machine => {\n      axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => {\n        const stoppedTime = calculateStoppedTime(res.data);\n        console.log(`Machine ${machine.name} stopped time: ${stoppedTime} seconds`);\n        // Here you can update the UI to display the stopped time\n      });\n    });\n  }, [machines]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: 16,\n      padding: 20\n    },\n    children: machines.map(machine => /*#__PURE__*/_jsxDEV(MachineCard, {\n      machine: machine\n    }, machine.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(MachinesList, \"xf/ld9baHigQEZsNJiqNOP72r5U=\");\n_c = MachinesList;\nvar _c;\n$RefreshReg$(_c, \"MachinesList\");","map":{"version":3,"names":["React","useEffect","useState","axios","MachineCard","jsxDEV","_jsxDEV","MachinesList","processId","_s","machines","setMachines","calculateStoppedTime","history","totalStoppedTime","stopStartTime","forEach","entry","index","status","Date","changed_at","workingStartTime","serverIP","window","location","protocol","hostname","get","then","res","processIds","data","map","p","id","Promise","all","results","allMachines","flatMap","r","filter","m","machine","stoppedTime","console","log","name","style","display","flexWrap","gap","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayoubsadour/Desktop/last-version-main/frontend/src/components/MachinesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MachineCard from './MachineCard';\n\nexport default function MachinesList({ processId }) {\n  const [machines, setMachines] = useState([]);\n\n  const calculateStoppedTime = (history) => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n\n    history.forEach((entry, index) => {\n      if (entry.status === 'stop') {\n        stopStartTime = new Date(entry.changed_at);\n      } else if (entry.status === 'working' && stopStartTime) {\n        const workingStartTime = new Date(entry.changed_at);\n        totalStoppedTime += (workingStartTime - stopStartTime) / 1000; // Convert to seconds\n        stopStartTime = null;\n      }\n    });\n\n    return totalStoppedTime;\n  };\n\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    if (processId === 'stopped') {\n      // Fetch all processes, then all machines for each process, and filter stopped\n      axios.get(`${serverIP}:5000/api/processes`).then(res => {\n        const processIds = res.data.map(p => p.id);\n        Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`)))\n          .then(results => {\n            const allMachines = results.flatMap(r => r.data);\n            setMachines(allMachines.filter(m => m.status === 'stop'));\n          });\n      });\n    } else {\n      axios.get(`${serverIP}:5000/api/machines?processId=${processId}`)\n        .then(res => setMachines(res.data));\n    }\n  }, [processId]);\n\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    machines.forEach(machine => {\n      axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`)\n        .then(res => {\n          const stoppedTime = calculateStoppedTime(res.data);\n          console.log(`Machine ${machine.name} stopped time: ${stoppedTime} seconds`);\n          // Here you can update the UI to display the stopped time\n        });\n    });\n  }, [machines]);\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, padding: 20 }}>\n      {machines.map(machine => (\n        <MachineCard key={machine.id} machine={machine} />\n      ))}\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}