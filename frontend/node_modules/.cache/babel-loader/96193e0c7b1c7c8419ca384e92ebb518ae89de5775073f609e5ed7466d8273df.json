{"ast":null,"code":"var _jsxFileName = \"/Users/ayoubsadour/Desktop/last-version-main/frontend/src/pages/OperationalTimePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OperationalTimePage() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    // Fetch all machines (across all processes)\n    axios.get(`${serverIP}:5000/api/processes`).then(res => {\n      const processIds = res.data.map(p => p.id);\n      Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`))).then(results => {\n        const allMachines = results.flatMap(r => r.data);\n        // For each machine, fetch status history\n        Promise.all(allMachines.map(machine => axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => ({\n          ...machine,\n          statusHistory: res.data\n        })))).then(machinesWithHistory => {\n          setMachines(machinesWithHistory);\n          setLoading(false);\n        });\n      });\n    });\n  }, []);\n  const calculateStoppedTime = history => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    history.forEach(entry => {\n      if (entry.status === 'stop') {\n        stopStartTime = new Date(entry.changed_at);\n      } else if (entry.status === 'working' && stopStartTime) {\n        const workingStartTime = new Date(entry.changed_at);\n        totalStoppedTime += (workingStartTime - stopStartTime) / 1000; // seconds\n        stopStartTime = null;\n      }\n    });\n    return (totalStoppedTime / 60).toFixed(2); // minutes\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"responsive-container\",\n    style: {\n      minHeight: '100vh',\n      background: '#f4f6fa',\n      padding: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 900,\n        margin: '0 auto',\n        background: '#fff',\n        borderRadius: 12,\n        boxShadow: '0 2px 12px #0001',\n        padding: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: 32,\n          color: '#1976d2'\n        },\n        children: \"Stopped to Working Time for All Machines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%',\n          background: '#fafbfc',\n          borderRadius: 8,\n          overflow: 'hidden',\n          boxShadow: '0 1px 4px #0001'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          style: {\n            background: '#1976d2',\n            color: '#fff'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px 8px',\n                fontWeight: 600\n              },\n              children: \"Machine Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px 8px',\n                fontWeight: 600\n              },\n              children: \"Stopped Time (minutes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: machines.map(machine => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '1px solid #e0e0e0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '10px 8px'\n              },\n              children: machine.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '10px 8px',\n                color: '#d32f2f',\n                fontWeight: 500\n              },\n              children: calculateStoppedTime(machine.statusHistory)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, machine.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(OperationalTimePage, \"fw60HULf0NHlNGPZFFEX6wxOgaU=\");\n_c = OperationalTimePage;\nvar _c;\n$RefreshReg$(_c, \"OperationalTimePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OperationalTimePage","_s","machines","setMachines","loading","setLoading","serverIP","window","location","protocol","hostname","get","then","res","processIds","data","map","p","id","Promise","all","results","allMachines","flatMap","r","machine","statusHistory","machinesWithHistory","calculateStoppedTime","history","totalStoppedTime","stopStartTime","forEach","entry","status","Date","changed_at","workingStartTime","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","minHeight","background","padding","maxWidth","margin","borderRadius","boxShadow","marginBottom","color","borderCollapse","width","overflow","fontWeight","borderBottom","name","_c","$RefreshReg$"],"sources":["/Users/ayoubsadour/Desktop/last-version-main/frontend/src/pages/OperationalTimePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function OperationalTimePage() {\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    // Fetch all machines (across all processes)\n    axios.get(`${serverIP}:5000/api/processes`).then(res => {\n      const processIds = res.data.map(p => p.id);\n      Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`)))\n        .then(results => {\n          const allMachines = results.flatMap(r => r.data);\n          // For each machine, fetch status history\n          Promise.all(\n            allMachines.map(machine =>\n              axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => ({\n                ...machine,\n                statusHistory: res.data\n              }))\n            )\n          ).then(machinesWithHistory => {\n            setMachines(machinesWithHistory);\n            setLoading(false);\n          });\n        });\n    });\n  }, []);\n\n  const calculateStoppedTime = (history) => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    history.forEach(entry => {\n      if (entry.status === 'stop') {\n        stopStartTime = new Date(entry.changed_at);\n      } else if (entry.status === 'working' && stopStartTime) {\n        const workingStartTime = new Date(entry.changed_at);\n        totalStoppedTime += (workingStartTime - stopStartTime) / 1000; // seconds\n        stopStartTime = null;\n      }\n    });\n    return (totalStoppedTime / 60).toFixed(2); // minutes\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div className=\"responsive-container\" style={{ minHeight: '100vh', background: '#f4f6fa', padding: 0 }}>\n      <div style={{ maxWidth: 900, margin: '0 auto', background: '#fff', borderRadius: 12, boxShadow: '0 2px 12px #0001', padding: 32 }}>\n        <h2 style={{ marginBottom: 32, color: '#1976d2' }}>Stopped to Working Time for All Machines</h2>\n        <table style={{ borderCollapse: 'collapse', width: '100%', background: '#fafbfc', borderRadius: 8, overflow: 'hidden', boxShadow: '0 1px 4px #0001' }}>\n          <thead style={{ background: '#1976d2', color: '#fff' }}>\n            <tr>\n              <th style={{ padding: '12px 8px', fontWeight: 600 }}>Machine Name</th>\n              <th style={{ padding: '12px 8px', fontWeight: 600 }}>Stopped Time (minutes)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {machines.map(machine => (\n              <tr key={machine.id} style={{ borderBottom: '1px solid #e0e0e0' }}>\n                <td style={{ padding: '10px 8px' }}>{machine.name}</td>\n                <td style={{ padding: '10px 8px', color: '#d32f2f', fontWeight: 500 }}>{calculateStoppedTime(machine.statusHistory)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}