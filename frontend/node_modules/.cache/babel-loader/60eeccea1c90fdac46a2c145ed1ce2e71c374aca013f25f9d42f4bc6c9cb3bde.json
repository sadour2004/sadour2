{"ast":null,"code":"var _jsxFileName = \"/Users/ayoubsadour/Desktop/last-version-main/frontend/src/pages/OperationalTimePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OperationalTimePage() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    // Fetch all machines (across all processes)\n    axios.get(`${serverIP}:5000/api/processes`).then(res => {\n      const processIds = res.data.map(p => p.id);\n      Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`))).then(results => {\n        const allMachines = results.flatMap(r => r.data);\n        // For each machine, fetch status history\n        Promise.all(allMachines.map(machine => axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => ({\n          ...machine,\n          statusHistory: res.data\n        })))).then(machinesWithHistory => {\n          setMachines(machinesWithHistory);\n          setLoading(false);\n        });\n      });\n    });\n  }, []);\n  const calculateStoppedTime = history => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    history.forEach(entry => {\n      if (entry.status === 'stop') {\n        stopStartTime = new Date(entry.changed_at);\n      } else if (entry.status === 'working' && stopStartTime) {\n        const workingStartTime = new Date(entry.changed_at);\n        totalStoppedTime += (workingStartTime - stopStartTime) / 1000; // seconds\n        stopStartTime = null;\n      }\n    });\n    return totalStoppedTime;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stopped to Working Time for All Machines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        borderCollapse: 'collapse',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Machine Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Stopped Time (seconds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: machines.map(machine => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: machine.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: calculateStoppedTime(machine.statusHistory)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, machine.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(OperationalTimePage, \"fw60HULf0NHlNGPZFFEX6wxOgaU=\");\n_c = OperationalTimePage;\nvar _c;\n$RefreshReg$(_c, \"OperationalTimePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OperationalTimePage","_s","machines","setMachines","loading","setLoading","serverIP","window","location","protocol","hostname","get","then","res","processIds","data","map","p","id","Promise","all","results","allMachines","flatMap","r","machine","statusHistory","machinesWithHistory","calculateStoppedTime","history","totalStoppedTime","stopStartTime","forEach","entry","status","Date","changed_at","workingStartTime","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","border","cellPadding","borderCollapse","width","name","_c","$RefreshReg$"],"sources":["/Users/ayoubsadour/Desktop/last-version-main/frontend/src/pages/OperationalTimePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function OperationalTimePage() {\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    // Fetch all machines (across all processes)\n    axios.get(`${serverIP}:5000/api/processes`).then(res => {\n      const processIds = res.data.map(p => p.id);\n      Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`)))\n        .then(results => {\n          const allMachines = results.flatMap(r => r.data);\n          // For each machine, fetch status history\n          Promise.all(\n            allMachines.map(machine =>\n              axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => ({\n                ...machine,\n                statusHistory: res.data\n              }))\n            )\n          ).then(machinesWithHistory => {\n            setMachines(machinesWithHistory);\n            setLoading(false);\n          });\n        });\n    });\n  }, []);\n\n  const calculateStoppedTime = (history) => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    history.forEach(entry => {\n      if (entry.status === 'stop') {\n        stopStartTime = new Date(entry.changed_at);\n      } else if (entry.status === 'working' && stopStartTime) {\n        const workingStartTime = new Date(entry.changed_at);\n        totalStoppedTime += (workingStartTime - stopStartTime) / 1000; // seconds\n        stopStartTime = null;\n      }\n    });\n    return totalStoppedTime;\n  };\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Stopped to Working Time for All Machines</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse', width: '100%' }}>\n        <thead>\n          <tr>\n            <th>Machine Name</th>\n            <th>Stopped Time (seconds)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {machines.map(machine => (\n            <tr key={machine.id}>\n              <td>{machine.name}</td>\n              <td>{calculateStoppedTime(machine.statusHistory)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}