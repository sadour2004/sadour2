{"ast":null,"code":"var _jsxFileName = \"/Users/ayoubsadour/Desktop/last-version-main/frontend/src/components/MachinesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MachineCard from './MachineCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MachinesList({\n  processId\n}) {\n  _s();\n  const [machines, setMachines] = useState([]);\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    if (processId === 'stopped') {\n      // Fetch all processes, then all machines for each process, and filter stopped\n      axios.get(`${serverIP}:5000/api/processes`).then(res => {\n        const processIds = res.data.map(p => p.id);\n        Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`))).then(results => {\n          const allMachines = results.flatMap(r => r.data);\n          setMachines(allMachines.filter(m => m.status === 'stop'));\n        });\n      });\n    } else {\n      axios.get(`${serverIP}:5000/api/machines?processId=${processId}`).then(res => setMachines(res.data));\n    }\n  }, [processId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: 16,\n      padding: 20\n    },\n    children: machines.map(machine => /*#__PURE__*/_jsxDEV(MachineCard, {\n      machine: machine\n    }, machine.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(MachinesList, \"etL6ZTbqU58vGaTbtLSSX9BCKmI=\");\n_c = MachinesList;\nvar _c;\n$RefreshReg$(_c, \"MachinesList\");","map":{"version":3,"names":["React","useEffect","useState","axios","MachineCard","jsxDEV","_jsxDEV","MachinesList","processId","_s","machines","setMachines","serverIP","window","location","protocol","hostname","get","then","res","processIds","data","map","p","id","Promise","all","results","allMachines","flatMap","r","filter","m","status","style","display","flexWrap","gap","padding","children","machine","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayoubsadour/Desktop/last-version-main/frontend/src/components/MachinesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MachineCard from './MachineCard';\n\nexport default function MachinesList({ processId }) {\n  const [machines, setMachines] = useState([]);\n\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    if (processId === 'stopped') {\n      // Fetch all processes, then all machines for each process, and filter stopped\n      axios.get(`${serverIP}:5000/api/processes`).then(res => {\n        const processIds = res.data.map(p => p.id);\n        Promise.all(processIds.map(id => axios.get(`${serverIP}:5000/api/machines?processId=${id}`)))\n          .then(results => {\n            const allMachines = results.flatMap(r => r.data);\n            setMachines(allMachines.filter(m => m.status === 'stop'));\n          });\n      });\n    } else {\n      axios.get(`${serverIP}:5000/api/machines?processId=${processId}`)\n        .then(res => setMachines(res.data));\n    }\n  }, [processId]);\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, padding: 20 }}>\n      {machines.map(machine => (\n        <MachineCard key={machine.id} machine={machine} />\n      ))}\n    </div>\n  );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,QAAQ;IAC3E,IAAIR,SAAS,KAAK,SAAS,EAAE;MAC3B;MACAL,KAAK,CAACc,GAAG,CAAC,GAAGL,QAAQ,qBAAqB,CAAC,CAACM,IAAI,CAACC,GAAG,IAAI;QACtD,MAAMC,UAAU,GAAGD,GAAG,CAACE,IAAI,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAACN,UAAU,CAACE,GAAG,CAACE,EAAE,IAAIrB,KAAK,CAACc,GAAG,CAAC,GAAGL,QAAQ,gCAAgCY,EAAE,EAAE,CAAC,CAAC,CAAC,CAC1FN,IAAI,CAACS,OAAO,IAAI;UACf,MAAMC,WAAW,GAAGD,OAAO,CAACE,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACT,IAAI,CAAC;UAChDV,WAAW,CAACiB,WAAW,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,MAAM,CAAC,CAAC;QAC3D,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACL9B,KAAK,CAACc,GAAG,CAAC,GAAGL,QAAQ,gCAAgCJ,SAAS,EAAE,CAAC,CAC9DU,IAAI,CAACC,GAAG,IAAIR,WAAW,CAACQ,GAAG,CAACE,IAAI,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,oBACEF,OAAA;IAAK4B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,EACrE7B,QAAQ,CAACY,GAAG,CAACkB,OAAO,iBACnBlC,OAAA,CAACF,WAAW;MAAkBoC,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAAChB,EAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnC,EAAA,CA5BuBF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}