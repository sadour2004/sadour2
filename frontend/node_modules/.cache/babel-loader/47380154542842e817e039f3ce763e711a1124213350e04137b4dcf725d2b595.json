{"ast":null,"code":"var _jsxFileName = \"/Users/ayoubsadour/Desktop/last-version-main/frontend/src/pages/OperationalTimePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OperationalTimePage() {\n  _s();\n  const [processes, setProcesses] = useState([]);\n  const [selectedProcess, setSelectedProcess] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    axios.get(`${serverIP}:5000/api/processes`).then(res => {\n      setProcesses(res.data);\n    });\n  }, []);\n  const fetchMachinesForProcess = processId => {\n    setLoading(true);\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    axios.get(`${serverIP}:5000/api/machines?processId=${processId}`).then(res => {\n      const machines = res.data;\n      Promise.all(machines.map(machine => axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => ({\n        ...machine,\n        statusHistory: res.data\n      })))).then(machinesWithHistory => {\n        setMachines(machinesWithHistory);\n        setLoading(false);\n      });\n    });\n  };\n  const calculateStoppedTime = history => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    let stopType = null;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Start of today\n\n    for (let i = 0; i < history.length; i++) {\n      const entry = history[i];\n      const entryDate = new Date(entry.changed_at);\n      if (entryDate < today) continue; // Ignore entries before today\n      if (entry.status === 'stop' || entry.status === 'maintenance') {\n        stopStartTime = entryDate;\n        stopType = entry.status;\n      } else if (entry.status === 'working' && stopStartTime) {\n        totalStoppedTime += (entryDate - stopStartTime) / 1000; // seconds\n        stopStartTime = null;\n        stopType = null;\n      }\n    }\n    return (totalStoppedTime / 60).toFixed(2); // minutes\n  };\n  const handleProcessClick = procId => {\n    setSelectedProcess(procId);\n    fetchMachinesForProcess(procId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"responsive-container\",\n    style: {\n      minHeight: '100vh',\n      background: '#f4f6fa',\n      padding: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 900,\n        margin: '0 auto',\n        background: '#fff',\n        borderRadius: 12,\n        boxShadow: '0 2px 12px #0001',\n        padding: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: 32,\n          color: '#1976d2'\n        },\n        children: \"Stopped to Working Time for Machines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 12,\n          flexWrap: 'wrap',\n          marginBottom: 24\n        },\n        children: processes.map(proc => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleProcessClick(proc.id),\n          style: {\n            padding: '8px 18px',\n            background: selectedProcess === proc.id ? '#1976d2' : '#eee',\n            color: selectedProcess === proc.id ? '#fff' : '#1976d2',\n            border: '1px solid #1976d2',\n            borderRadius: 6,\n            fontWeight: 600,\n            fontSize: 15,\n            cursor: 'pointer',\n            marginBottom: 4\n          },\n          children: proc.name\n        }, proc.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), selectedProcess && !loading && /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%',\n          background: '#fafbfc',\n          borderRadius: 8,\n          overflow: 'hidden',\n          boxShadow: '0 1px 4px #0001'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          style: {\n            background: '#1976d2',\n            color: '#fff'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px 8px',\n                fontWeight: 600\n              },\n              children: \"Machine Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '12px 8px',\n                fontWeight: 600\n              },\n              children: \"Stopped Time (minutes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: machines.map(machine => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '1px solid #e0e0e0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '10px 8px'\n              },\n              children: machine.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '10px 8px',\n                color: '#d32f2f',\n                fontWeight: 500\n              },\n              children: calculateStoppedTime(machine.statusHistory)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, machine.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(OperationalTimePage, \"t/QBb8qHp/i015FAn6o0k7ooCcc=\");\n_c = OperationalTimePage;\nvar _c;\n$RefreshReg$(_c, \"OperationalTimePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","OperationalTimePage","_s","processes","setProcesses","selectedProcess","setSelectedProcess","machines","setMachines","loading","setLoading","serverIP","window","location","protocol","hostname","get","then","res","data","fetchMachinesForProcess","processId","Promise","all","map","machine","id","statusHistory","machinesWithHistory","calculateStoppedTime","history","totalStoppedTime","stopStartTime","stopType","today","Date","setHours","i","length","entry","entryDate","changed_at","status","toFixed","handleProcessClick","procId","className","style","minHeight","background","padding","children","maxWidth","margin","borderRadius","boxShadow","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","flexWrap","proc","onClick","border","fontWeight","fontSize","cursor","name","borderCollapse","width","overflow","borderBottom","_c","$RefreshReg$"],"sources":["/Users/ayoubsadour/Desktop/last-version-main/frontend/src/pages/OperationalTimePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function OperationalTimePage() {\n  const [processes, setProcesses] = useState([]);\n  const [selectedProcess, setSelectedProcess] = useState(null);\n  const [machines, setMachines] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    axios.get(`${serverIP}:5000/api/processes`).then(res => {\n      setProcesses(res.data);\n    });\n  }, []);\n\n  const fetchMachinesForProcess = (processId) => {\n    setLoading(true);\n    const serverIP = window.location.protocol + '//' + window.location.hostname;\n    axios.get(`${serverIP}:5000/api/machines?processId=${processId}`)\n      .then(res => {\n        const machines = res.data;\n        Promise.all(\n          machines.map(machine =>\n            axios.get(`${serverIP}:5000/api/machines/${machine.id}/status-history`).then(res => ({\n              ...machine,\n              statusHistory: res.data\n            }))\n          )\n        ).then(machinesWithHistory => {\n          setMachines(machinesWithHistory);\n          setLoading(false);\n        });\n      });\n  };\n\n  const calculateStoppedTime = (history) => {\n    let totalStoppedTime = 0;\n    let stopStartTime = null;\n    let stopType = null;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Start of today\n\n    for (let i = 0; i < history.length; i++) {\n      const entry = history[i];\n      const entryDate = new Date(entry.changed_at);\n      if (entryDate < today) continue; // Ignore entries before today\n      if (entry.status === 'stop' || entry.status === 'maintenance') {\n        stopStartTime = entryDate;\n        stopType = entry.status;\n      } else if (entry.status === 'working' && stopStartTime) {\n        totalStoppedTime += (entryDate - stopStartTime) / 1000; // seconds\n        stopStartTime = null;\n        stopType = null;\n      }\n    }\n    return (totalStoppedTime / 60).toFixed(2); // minutes\n  };\n\n  const handleProcessClick = (procId) => {\n    setSelectedProcess(procId);\n    fetchMachinesForProcess(procId);\n  };\n\n  return (\n    <div className=\"responsive-container\" style={{ minHeight: '100vh', background: '#f4f6fa', padding: 0 }}>\n      <div style={{ maxWidth: 900, margin: '0 auto', background: '#fff', borderRadius: 12, boxShadow: '0 2px 12px #0001', padding: 32 }}>\n        <h2 style={{ marginBottom: 32, color: '#1976d2' }}>Stopped to Working Time for Machines</h2>\n        <div style={{ display: 'flex', gap: 12, flexWrap: 'wrap', marginBottom: 24 }}>\n          {processes.map(proc => (\n            <button\n              key={proc.id}\n              onClick={() => handleProcessClick(proc.id)}\n              style={{\n                padding: '8px 18px',\n                background: selectedProcess === proc.id ? '#1976d2' : '#eee',\n                color: selectedProcess === proc.id ? '#fff' : '#1976d2',\n                border: '1px solid #1976d2',\n                borderRadius: 6,\n                fontWeight: 600,\n                fontSize: 15,\n                cursor: 'pointer',\n                marginBottom: 4\n              }}\n            >\n              {proc.name}\n            </button>\n          ))}\n        </div>\n        {loading && <div>Loading...</div>}\n        {selectedProcess && !loading && (\n          <table style={{ borderCollapse: 'collapse', width: '100%', background: '#fafbfc', borderRadius: 8, overflow: 'hidden', boxShadow: '0 1px 4px #0001' }}>\n            <thead style={{ background: '#1976d2', color: '#fff' }}>\n              <tr>\n                <th style={{ padding: '12px 8px', fontWeight: 600 }}>Machine Name</th>\n                <th style={{ padding: '12px 8px', fontWeight: 600 }}>Stopped Time (minutes)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {machines.map(machine => (\n                <tr key={machine.id} style={{ borderBottom: '1px solid #e0e0e0' }}>\n                  <td style={{ padding: '10px 8px' }}>{machine.name}</td>\n                  <td style={{ padding: '10px 8px', color: '#d32f2f', fontWeight: 500 }}>{calculateStoppedTime(machine.statusHistory)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}